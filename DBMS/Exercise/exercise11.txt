Create a trigger to update the 'product_price_history' table when the
price of the product is updated in the 'product' table to maintain the
history of the prices of the products when the price of a product
changes constantly.
Objective: The objective of this exercise is to enable you to use trigger in
PL/SQL

Create the PRODUCT Table
CREATE TABLE PRODUCT (
    product_id NUMBER PRIMARY KEY,
    product_name VARCHAR2(100),
    price NUMBER
);

Create the PRODUCT_PRICE_HISTORY Table

CREATE TABLE PRODUCT_PRICE_HISTORY (
    history_id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    product_id NUMBER,
    old_price NUMBER,
    new_price NUMBER,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_product FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id)
);

-- Insert Sample Data
INSERT INTO PRODUCT (product_id, product_name, price) VALUES (1, 'Laptop', 50000);
INSERT INTO PRODUCT (product_id, product_name, price) VALUES (2, 'Phone', 20000);
COMMIT;

-- Create the trigger
CREATE OR REPLACE TRIGGER trg_product_price_update
BEFORE UPDATE ON PRODUCT
FOR EACH ROW
WHEN (OLD.price IS DISTINCT FROM NEW.price)  -- Ensures history is stored only if price changes
BEGIN
    INSERT INTO PRODUCT_PRICE_HISTORY (product_id, old_price, new_price, updated_at)
    VALUES (:OLD.product_id, :OLD.price, :NEW.price, SYSTIMESTAMP);
END;
/

-- Test the Trigger
-- Update Product Prices
UPDATE PRODUCT SET price = 55000 WHERE product_id = 1;
UPDATE PRODUCT SET price = 22000 WHERE product_id = 2;
COMMIT;


-- Check Product Price History
SELECT * FROM PRODUCT_PRICE_HISTORY;



