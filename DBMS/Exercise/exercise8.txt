-- QUESTION

Write a PL/SQL block to illustrate the programmer-defined exceptions.
Get the salary of an employee and check it with the jobâ€™s salary range.
If the salary is below the range, raise exception
BELOW_SALARY_RANGE. If the salary is above the range, raise
exception ABOVE_SALARY_RANGE.
Objective: The objective of this exercise is to enable you to make use of
exception handling in PL/SQL.

-- SOLUTION

-- Create Employee Table
CREATE TABLE EMPLOYEES (
    empno NUMBER PRIMARY KEY,
    ename VARCHAR2(50),
    job VARCHAR2(50),
    salary NUMBER
);


-- Insert Sample Data
INSERT INTO EMPLOYEES VALUES (101, 'Alice', 'Manager', 60000);
INSERT INTO EMPLOYEES VALUES (102, 'Bob', 'Developer', 40000);
INSERT INTO EMPLOYEES VALUES (103, 'Charlie', 'Clerk', 25000);
INSERT INTO EMPLOYEES VALUES (104, 'David', 'Developer', 55000);
INSERT INTO EMPLOYEES VALUES (105, 'Eve', 'Manager', 80000);
COMMIT;

-- Define Salary Ranges

CREATE TABLE JOB_SALARIES (
    job VARCHAR2(50) PRIMARY KEY,
    min_salary NUMBER,
    max_salary NUMBER
);

-- Insert Job Salary Ranges
INSERT INTO JOB_SALARIES VALUES ('Manager', 50000, 90000);
INSERT INTO JOB_SALARIES VALUES ('Developer', 35000, 70000);
INSERT INTO JOB_SALARIES VALUES ('Clerk', 20000, 40000);
COMMIT;

